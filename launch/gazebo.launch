<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />
  <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find car2)/urdf/car2.urdf -urdf -model car2" output="screen" />
  <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" />
</launch>
<!-- <launch>

<rosparam file="$(find car2)/config/arm_controllers.yaml" command="load" />
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller arm_base_controller arm_controller" />
 
 
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro '$(find car2)/urdf/car2.urdf'" />
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model car2 -x 1.0 -y 1.0 -z 0.1" output="screen" />

  <rosparam file="$(find car2)/config/arm_controllers.yaml" command="load" />
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller arm_base_controller arm_controller" />
</launch> -->